// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantsDataAccessLayer.DbContext;

namespace RestaurantsDataAccessLayer.Migrations
{
    [DbContext(typeof(RestaurantsDbContext))]
    partial class RestaurantsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantsDomainLayer.Model.Address", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Landmark");

                    b.Property<string>("Line1");

                    b.Property<string>("Line2");

                    b.Property<string>("State");

                    b.HasKey("ID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("RestaurantsDomainLayer.Model.FoodItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Cost");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<double>("Rating");

                    b.Property<Guid>("RestaurantId");

                    b.HasKey("ID");

                    b.HasIndex("RestaurantId");

                    b.ToTable("FoodItem");
                });

            modelBuilder.Entity("RestaurantsDomainLayer.Model.Restaurant", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AverageCost");

                    b.Property<int>("DeliveryTime")
                        .HasMaxLength(150);

                    b.Property<Guid?>("LocationID");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<double>("Rating");

                    b.Property<int>("Type");

                    b.HasKey("ID");

                    b.HasIndex("LocationID");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("RestaurantsDomainLayer.Model.FoodItem", b =>
                {
                    b.HasOne("RestaurantsDomainLayer.Model.Restaurant", "Restaurant")
                        .WithMany("FoodItems")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RestaurantsDomainLayer.Model.Restaurant", b =>
                {
                    b.HasOne("RestaurantsDomainLayer.Model.Address", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID");
                });
#pragma warning restore 612, 618
        }
    }
}
